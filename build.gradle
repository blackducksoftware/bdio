buildscript {
	repositories { maven { url 'https://plugins.gradle.org/m2/' } }
	dependencies { 
        classpath 'com.netflix.nebula:nebula-dependency-recommender:5.1.0'
		classpath 'com.netflix.nebula:nebula-publishing-plugin:17.3.2'
        classpath 'org.jfrog.buildinfo:build-info-extractor-gradle:4.13.0'
	}
}

allprojects {
	apply plugin: 'eclipse'
	apply plugin: 'nebula.dependency-recommender'
    apply plugin: "nebula.maven-publish"
	apply plugin: 'maven-publish'
	apply plugin: 'com.jfrog.artifactory'	

	repositories {
		jcenter()
		maven {
			url 'https://oss.jfrog.org/artifactory/oss-snapshot-local/'
		}
		maven {
			url 'https://jitpack.io'
		}
	}

	dependencyRecommendations {
		strategy OverrideTransitives
		propertiesFile file: file("$rootDir/dependencies.properties")
	}
}

ext {
	productionBuild = System.properties['productionBuild'] == 'true' ? true : false
	uploadRepoKey = System.properties['uploadRepoKey'] ?: 'bds-bdio-snapshot'
	buildName = 'bdio'
}

subprojects {
	apply plugin: 'java'
	apply plugin: 'nebula.source-jar'

	sourceCompatibility = JavaVersion.VERSION_1_8

	tasks.withType(JavaCompile) {
		options.compilerArgs << '-Xlint:all'
	}

	tasks.withType(AbstractArchiveTask) {
		preserveFileTimestamps = false
		reproducibleFileOrder = true
	}

	jar {
		manifest {
			attributes('Implementation-Title': "${-> project.description}",
			           'Implementation-Version': "${-> project.version}",
			           'Specification-Title': specTitle,
			           'Specification-Version': specVersion,
			           'Specification-Vendor': specVendor)
		}
	}
	
	publishing{
		publications{
			maven(MavenPublication){
				from components.java
				artifact sourceJar
			}
		}
	}
}
