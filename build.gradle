buildscript {
	repositories { maven { url 'https://plugins.gradle.org/m2/' } }
	dependencies { classpath 'com.netflix.nebula:nebula-dependency-recommender:5.0.0' }
	dependencies { classpath 'com.netflix.nebula:nebula-publishing-plugin:5.1.1' }
	dependencies { classpath 'net.ltgt.gradle:gradle-errorprone-plugin:0.0.11' }
}

allprojects {
	apply plugin: 'eclipse'
	apply plugin: 'nebula.dependency-recommender'

	repositories {
		jcenter()
		maven {
			url 'https://oss.jfrog.org/artifactory/oss-snapshot-local/'
		}
		maven {
			url 'https://jitpack.io'
		}
	}

	dependencyRecommendations {
		propertiesFile file: file("$rootDir/dependencies.properties")
	}
}

subprojects {
	apply plugin: 'java'
	apply plugin: 'nebula.maven-publish'
	apply plugin: 'nebula.source-jar'
	apply plugin: 'net.ltgt.errorprone'

	sourceCompatibility = 1.8

	tasks.withType(JavaCompile) {
		options.compilerArgs << '-Xlint:all'
	}
	
	// Force Jackson back to 2.7.8 for compatibility reasons
	configurations.all {
		resolutionStrategy {
			force 'com.fasterxml.jackson.core:jackson-annotations:2.7.0'
			force 'com.fasterxml.jackson.core:jackson-core:2.7.8'
			force 'com.fasterxml.jackson.core:jackson-databind:2.7.8'
		}
	}

	jar {
		manifest {
			attributes('Implementation-Title': project.description,
			           'Implementation-Version': project.version,
			           'Specification-Title': specTitle,
			           'Specification-Version': specVersion,
			           'Specification-Vendor': specVendor)
		}
	}
	
	publishing {
	    publications {
	        nebula(MavenPublication) {
	            pom.withXml {
	                configurations.compile.resolvedConfiguration.firstLevelModuleDependencies.each { dep ->
	                    asNode().dependencies[0].dependency.find {
	                        it.artifactId[0].text() == dep.moduleName && 
	                        it.groupId[0].text() == dep.moduleGroup
	                    }?.scope[0]?.value = 'compile'
	                }
	            }
	        }
	    }
	}
}
